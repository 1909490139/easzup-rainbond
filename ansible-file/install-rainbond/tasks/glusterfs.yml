# 离线安装 glusterfs
- name: 准备离线安装包目录
  file: name=/opt/kube/packages/glusterfs state=directory

- block:
  - name: 分发 glusterfs_xenial 离线包
    copy:
      src: "{{ base_dir }}/down/packages/glusterfs_xenial.tar.gz"
      dest: "/opt/kube/packages/glusterfs/glusterfs_xenial.tar.gz"

  - name: 安装 glusterfs_xenial 离线包
    shell: 'cd /opt/kube/packages/glusterfs && tar zxf glusterfs_xenial.tar.gz && \
           dpkg -i *.deb > /tmp/install_glusterfs.log 2>&1'
  when: ansible_distribution_release == "xenial"
  ignore_errors: true

- block:
  - name: 分发 glusterfs_bionic 离线包
    copy:
      src: "{{ base_dir }}/down/packages/glusterfs_bionic.tar.gz"
      dest: "/opt/kube/packages/glusterfs/glusterfs_bionic.tar.gz"

  - name: 安装 glusterfs_bionic 离线包
    shell: 'cd /opt/kube/packages/glusterfs && tar zxf glusterfs_bionic.tar.gz && \
           dpkg -i *.deb > /tmp/install_glusterfs.log 2>&1'
  when: ansible_distribution_release == "bionic"
  ignore_errors: true

- block:
  - name: 分发 glusterfs_centos7 离线包
    copy:
      src: "{{ base_dir }}/down/packages/glusterfs_centos7.tar.gz"
      dest: "/opt/kube/packages/glusterfs/glusterfs_centos7.tar.gz"

  - name: 安装 glusterfs_centos7 离线包
    shell: 'cd /opt/kube/packages/glusterfs && tar zxf glusterfs_centos7.tar.gz && \
           rpm -Uvh --force --nodeps *.rpm > /tmp/install_glusterfs.log 2>&1'
  when:
  - 'ansible_distribution == "CentOS"'
  - 'ansible_distribution_major_version == "7"'
  ignore_errors: true

- block:
  - name: 分发 glusterfs_stretch 离线包
    copy:
      src: "{{ base_dir }}/down/packages/glusterfs_stretch.tar.gz"
      dest: "/opt/kube/packages/glusterfs/glusterfs_stretch.tar.gz"

  - name: 安装 glusterfs_stretch 离线包
    shell: 'cd /opt/kube/packages/glusterfs && tar zxf glusterfs_stretch.tar.gz && \
           dpkg -i *.deb > /tmp/install_glusterfs.log 2>&1'
  when: ansible_distribution_release == "stretch"
  ignore_errors: true

- block:
  - name: 分发 glusterfs_buster 离线包
    copy:
      src: "{{ base_dir }}/down/packages/glusterfs_buster.tar.gz"
      dest: "/opt/kube/packages/glusterfs/glusterfs_buster.tar.gz"

  - name: 安装 glusterfs_buster 离线包
    shell: 'cd /opt/kube/packages/glusterfs && tar zxf glusterfs_buster.tar.gz && \
           dpkg -i *.deb > /tmp/install_glusterfs.log 2>&1'
  when: ansible_distribution_release == "buster"
  ignore_errors: true

- name: 准备 glusterfs-k8s 文件
  unarchive: src={{ base_dir }}/rainbond/gfs-k8s.tgz dest=/opt/kube/rainbond

- block:
    - block:
        - name: 检查是否已下载离线 glusterfs 镜像
          command: "ls {{ base_dir }}/rainbond/images"
          register: download_info
          connection: local
          run_once: true

        - name: 尝试推送离线 docker 镜像（若执行失败，可忽略）
          copy: src={{ base_dir }}/rainbond/images/{{ item }} dest=/opt/kube/rainbond/images/{{ item }}
          when: "item in download_info.stdout"
          with_items:
            - "glusterfs.tgz"
            - "glusterfs-provisioner.tgz"
          ignore_errors: true

        - name: 获取 glusterfs 离线镜像推送情况
          command: "ls /opt/kube/rainbond/images"
          register: image_info

        # 如果目录下有离线镜像，就把它导入到node节点上
        - name: 导入 glusterfs 的离线镜像（若执行失败，可忽略）
          shell: "{{ bin_dir }}/docker load -i /opt/kube/rainbond/images/{{ item }}"
          with_items:
            - "glusterfs.tgz"
            - "glusterfs-provisioner.tgz"
          ignore_errors: true
          when: "item in image_info.stdout and CONTAINER_RUNTIME == 'docker'"

        - name: 导入 glusterfs 的离线镜像（若执行失败，可忽略）
          shell: "{{ bin_dir }}/ctr -n=k8s.io images import /opt/kube/rainbond/images/{{ item }}"
          with_items:
            - "glusterfs.tgz"
            - "glusterfs-provisioner.tgz"
          ignore_errors: true
          when: "item in image_info.stdout and CONTAINER_RUNTIME == 'containerd'"